team_selection(players = mixed_team,
captain = mixed_team[1],
vc = mixed_team[11])
devtools::load_all(".")
devtools::test()
devtools::load_all(".")
devtools::test()
# Need to ensure no more than 3 from any one team
teams <- runif(n = 6, min = 1, max = 20)
# Need to ensure no more than 3 from any one team
teams <- round(runif(n = 6, min = 1, max = 20))
sample(1:20, 6)
# Need to ensure no more than 3 from any one team
teams <- sample(1:20, 6)
# Need to ensure no more than 3 from any one team
teams <- sample(1:20, 7)
keepers <- players$id[players$position == "GKP" & team == teams[1]][1:2]
defs <- players$id[players$position == "DEF" & team == teams[2]][1:3]
defs2 <- players$id[players$position == "DEF" & team == teams[3]][1:2]
mids <- players$id[players$position == "MID" & team == teams[4]][1:3]
mids2 <- players$id[players$position == "MID" & team == teams[5]][1:2]
fwds1 <- players$id[players$position == "FWD" & team == teams[6]][1:2]
fwds2 <- players$id[players$position == "FWD" & team == teams[7]][1]
# Need to ensure no more than 3 from any one team
teams <- sample(1:20, 7)
keepers <- players$id[players$position == "GKP" & players$team == teams[1]][1:2]
defs <- players$id[players$position == "DEF" & players$team == teams[2]][1:3]
defs2 <- players$id[players$position == "DEF" & players$team == teams[3]][1:2]
mids <- players$id[players$position == "MID" & players$team == teams[4]][1:3]
mids2 <- players$id[players$position == "MID" & players$team == teams[5]][1:2]
fwds1 <- players$id[players$position == "FWD" & players$team == teams[6]][1:2]
fwds2 <- players$id[players$position == "FWD" & players$team == teams[7]][1]
random_team_ids <- c(keepers[1],
defs1,
defs2[1],
mids1,
mids2[1],
fwds1,
keepers[2],
defs2[2],
mids2[2],
fwds2)
# Need to ensure no more than 3 from any one team
teams <- sample(1:20, 7)
keepers <- players$id[players$position == "GKP" & players$team == teams[1]][1:2]
defs1 <- players$id[players$position == "DEF" & players$team == teams[2]][1:3]
defs2 <- players$id[players$position == "DEF" & players$team == teams[3]][1:2]
mids1 <- players$id[players$position == "MID" & players$team == teams[4]][1:3]
mids2 <- players$id[players$position == "MID" & players$team == teams[5]][1:2]
fwds1 <- players$id[players$position == "FWD" & players$team == teams[6]][1:2]
fwds2 <- players$id[players$position == "FWD" & players$team == teams[7]][1]
random_team_ids <- c(keepers[1],
defs1,
defs2[1],
mids1,
mids2[1],
fwds1,
keepers[2],
defs2[2],
mids2[2],
fwds2)
random_team_ids
valid_team <- team_selection(players = random_team_ids,
captain = random_team_ids[8],
vc = random_team_ids[9])
valid_team
expect_s3_class(valid_team, "team_selection")
expect_named(valid_team, c("id", "name", "known_as", "position", "team", "points", "points_total", "form", "cost"))
expect_equal(nrow(valid_team), 15)
expect_equal(attr(valid_team, "captain"), random_team_ids[8])
expect_equal(attr(valid_team, "vc"), random_team_ids[9])
expect_equal(attr(valid_team, "submission_order"), random_team_ids)
devtools::load_all(".")
devtools::test()
usethis::use_test()
valid_team <- team_selection(players = valid_team_ids,
captain = valid_team_ids[1],
vc = valid_team_ids[3])
valid_team
valid_team_ids <- c(15, 430, 299, 10, 280, 283, 428, 305, 370, 465, 255, 398, 199, 391, 166)
valid_team <- team_selection(players = valid_team_ids,
captain = valid_team_ids[1],
vc = valid_team_ids[3])
subbed_team <- team_substitute(valid_team,
15,
398)
valid_team <- team_selection(players = valid_team_ids,
captain = valid_team_ids[6],
vc = valid_team_ids[7])
subbed_team <- team_substitute(valid_team,
15,
398)
expect_equal(valid_team, subbed_team)
expect_setequal(valid_team, subbed_team)
expect_setequal(valid_team$id, subbed_team$id)
expect_setequal(attr(valid_team, "submission_order"), attr(subbed_team, "submission_order"))
expect_equal(subbed_team$id[1], 398)
devtools::test()
expect_error(
team_substitute(valid_team,
p1 = valid_team_ids[6],
p2 = valid_team_ids[14])
)
team_substitute(valid_team,
p1 = valid_team_ids[6],
p2 = valid_team_ids[14])
team_substitute(valid_team,
p1 = valid_team_ids[7],
p2 = valid_team_ids[14])
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
expect_error(
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12]),
regexp = "must select 1 goalkeeper in your starting XI"
)
expect_error(
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12]),
regexp = "must select.*?goalkeeper in your starting XI"
)
devtools::test()
devtools::load_all(".")
devtools::test()
devtools::load_all(".")
devtools::test()
usethis::use_test()
httr2::secret_make_key()
httr2::secret_encrypt("chris.brownlie@hotmail.co.uk", key = "FANTASY_KEY")
httr2::secret_encrypt("chris.brownlie@hotmail.co.uk", key = "x_WyyjrHGuyQGRR_gXDPIA")
httr2::secret_encrypt("chris.brownlie@hotmail.co.uk", key = "FANTASY_KEY")
httr2::secret_decrypt(sdYfOjkcWdEDA5cAdU5r6VPwt-ji_b-QYpQ-FyMDPioeVKTKQL4Q_m5Xda0, "FANTASY_KEY")
httr2::secret_decrypt("sdYfOjkcWdEDA5cAdU5r6VPwt-ji_b-QYpQ-FyMDPioeVKTKQL4Q_m5Xda0", "FANTASY_KEY")
httr2::secret_decrypt("tPIPG8HBhvYfTY2j5dEEDfGdc2VcvclMi-TANtfDclBLYGiNYu4198rneTk", "FANTASY_KEY")
httr2::secret_encrypt("rr3Rct&Ryq&!", key = "FANTASY_KEY")
out <- authenticate(email = httr2::secret_decrypt("tPIPG8HBhvYfTY2j5dEEDfGdc2VcvclMi-TANtfDclBLYGiNYu4198rneTk",
"FANTASY_KEY"),
password = httr2::secret_decrypt("-SJx4AhW09y51joLmPSEWWAf5ezKkVX0EluSeQ",
"FANTASY_KEY"))
?expect_snapshote
?expect_snapshot
expect_snapshot(
authenticate(email = httr2::secret_decrypt("tPIPG8HBhvYfTY2j5dEEDfGdc2VcvclMi-TANtfDclBLYGiNYu4198rneTk",
"FANTASY_KEY"),
password = httr2::secret_decrypt("-SJx4AhW09y51joLmPSEWWAf5ezKkVX0EluSeQ",
"FANTASY_KEY")),
transform = function(x) gsub(pattern = "[[:alnum:][:punct:]]+@[[:alnum:][:punct:]]",
replacement = "[login]",
x)
)
expect_snapshot(
authenticate(email = httr2::secret_decrypt("tPIPG8HBhvYfTY2j5dEEDfGdc2VcvclMi-TANtfDclBLYGiNYu4198rneTk",
"FANTASY_KEY"),
password = httr2::secret_decrypt("-SJx4AhW09y51joLmPSEWWAf5ezKkVX0EluSeQ",
"FANTASY_KEY")),
transform = function(x) gsub(pattern = "[[:alnum:][:punct:]]+@[[:alnum:][:punct:]]+",
replacement = "[login]",
x)
)
devtools::test()
devtools::test()
usethis::use_test()
fixtures <- query_fixtures_data()
names(fixtures)
length(fixtures)
fixtures <- get_fixture_list()
class(fixtures)
expect_named(fixtures, c("id",
"gameweek",
"finished",
"kickoff_time",
"minutes",
"home_team",
"home_score",
"home_difficulty",
"away_team",
"away_score",
"away_difficulty"))
fixture_stats <- get_fixture_stats()
expect_named(fixture_stats, c("fixture_id", "stat", "team", "player", "value"))
expect_s3_class(fixtures, "tbl_df")
expect_s3_class(fixture_stats, "tbl_df")
usethis::use_test()
general <- query_general_data()
expect_length(general, 8)
expect_class(general, "list")
class(general)
expect_s3_class(general, "list")
expect_type(general, "list")
names(general)
test_that("boostrap-static can be queried", {
general <- query_general_data()
expect_length(general, 8)
expect_type(general, "list")
expect_named(general, c("events", "game_settings", "phases", "teams", "total_players", "elements", "element_stats", "element_types"))
})
usethis::use_test()
lineups <- get_predicted_lineups()
expect_s3_class(lineups, "tbl_df")
count(lineups, team)$n
count(lineups, Team)$n
rep(11, 20)
devtools::load_all(".")
lineups <- get_predicted_lineups()
lineups
get_my_team()
usethis::use_test()
players <- get_players()
names(players)
expect_named(players)
expect_equal(length(players), 580)
usethis::use_readme_rmd()
devtools::load_all(".")
authenticate()
devtools::load_all(".")
authenticate()
get_my_team()
get_fixture_list()
get_fixture_stats(fixture_id = 1)
get_fixture_stats(fixture_id = 10)
players <- get_players()
devtools::load_all(".")
1:3  %in% 1:10
devtools::load_all(".")
player_from_id(20)
player_from_id(20, T)
player_from_id(23)
player_from_id(289239)
devtools::load_all(".")
player_from_id(20000:20001)
player_from_id(1:10)
devtools::load_all(".")
player_from_id(1:10)
?map_chr
devtools::load_all(".")
player_from_id(1:10)
devtools::load_all(".")
player_from_id(1:10)
single_player <- function(pl_id, plyrs, fll) {
if (fll) {
plyrs$name[plyrs$id == id]
} else {
plyrs$known_as[plyrs$id == id]
}
}
length(id)
length(id) > 1
invalid <- id[!id %in% players$id]
!length(invalid)
purrr::map_chr(id, single_player, plyrs = players, fll = full)
id
single_player(1, plyrs = players, fll = full)
names(players)
players$name[players$id == 1]
purrr::map_chr(as.list(id), single_player, plyrs = players, fll = full)
devtools::load_all(".")
player_from_id(1:10)
devtools::load_all(".")
get_fixture_stats(1)
team_from_id(5:10)
team_from_id(25)
team_from_id(25:30)
get_teams() %>% names()
devtools::load_all(".")
team_from_id(25:30)
devtools::load_all(".")
team_from_id(25:30)
team_from_id(1:10)
team_from_id(1:10, T)
get_player_summary(player_id = 280)
get_my_team()
usethis::use_pkgdown()
usethis::use_pkgdown_github_pages()
devtools::document()
pkgdown::build_site()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home_index()
pkgdown::build_home_index()
?pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
vignette("bs5-variables", package = "bslib")
vignette("bs5-variables", package = "bslib")
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
devtools::load_all(".")
get_my_team()
get_my_team() |> class()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
devtools::document()
pkgdown::build_site()
get_my_team()
devtools::load_all(".")
get_my_team() |>
team_substitute(p1 = 465, p2 = 166)|>
assign_role(pid = 283, role = "c") |>
assign_role(pid = 428, role = "vc") |>
update_team()
get_my_team() |>
team_substitute(p1 = 465, p2 = 166)|>
assign_role(pid = 283, role = "c") |>
assign_role(pid = 428, role = "vc") |>
update_team()
devtools::load_all(".")
get_my_team() |>
team_substitute(p1 = 465, p2 = 166)|>
assign_role(pid = 283, role = "c") |>
assign_role(pid = 428, role = "vc") |>
update_team()
devtools::load_all(".")
get_my_team() |>
team_substitute(p1 = 465, p2 = 166)|>
assign_role(pid = 283, role = "c") |>
assign_role(pid = 428, role = "vc") |>
update_team()
get_my_team() |>
team_substitute(p1 = 465, p2 = 166)|>
assign_role(pid = 283, role = "c") |>
assign_role(pid = 428, role = "vc") |>
update_team()
get_my_team()
renv:;status()
renv::status()
install.packages(c("dplyr", "tidyr", "rvest"))
renv::snapshot()
renv::status()
pkgdown::build_site()
pkgdown::build_site()
?usethis::use_vignette()
usethis::use_vignette(name = authenticating, title = "Authenticating")
usethis::use_vignette(name = "authenticating", title = "Authenticating")
usethis::use_vignette("your-team", "Changing your team")
usethis::use_vignette("Getting data")
usethis::use_vignette("getting-data", "Getting FPL data")
usethis::use_vignette("example-project", "Example tasks")
usethis::use_news_md()
pkgdown::build_site()
get_my_team() |> unclass()
devtools::load_all(".")
get_my_team() |> unclass()
authenticate()
get_my_team() |> unclass()
get_my_team() -> team
devtools::load_all(".")
get_my_team() |> unclass()
get_my_team() |> unclass() -> x
sum(x$cost)
players()
get_players()
# Check authentication
require_authentication()
# Get manager ID (this environment variable must exist if authenticated)
manager_id <- Sys.getenv("FPL_MANAGER_ID")
# Construct endpoint URL for my team
my_team_ep <- construct(paste0("my-team/", manager_id, "/"))
# Get team data
rep <- perform_query(my_team_ep,
Cookie = paste0("pl_profile=", getOption("FANTASY_COOKIE")),
type = "json")
rep$transfers
rep$picks
sapply(rep$picks, function(x) x$purchase_price)
sapply(rep$picks, function(x) x$purchase_price) |>
sum()
rep$chips
options("FANTASY_PRETTY" = TRUE)
getOption("FANTASY_PRETTY")
getOption("FANTASY")
options("FANTASY_PRETTY" = NULL)
getOption("FANTASY_PRETTY") != FALSE
isFALSE(getOption("FANTASY_PRETTY"))
devtools::load_all(".")
global_remove_formatting()
get_my_team()
rep$chips
rep$chips |> sapply(function(x), x$name)
rep$chips |> sapply(function(x) x$name)
cli::cli_alert_danger("This action is not covered by free transfers so will cost points.")
cli::cli_alert_warning("This action is not covered by free transfers so will cost points.")
cli::cli_warn("This action is not covered by free transfers so will cost points.")
pkgdown::build_site()
devtools::document()
devtools::document()
pkgdown::build_site()
devtools::load_all(".")
search_for_player("Mahrez")
devtools::load_all(".")
search_for_player("Mahrez")
devtools::load_all(".")
search_for_player("Mahrez")
search_for_player("e")
search_for_player("suar")
search_for_player("salah")
devtools::load_all(".")
search_for_player("salah")
player_from_id(283,T)
pkgdown::build_site()
devtools::document()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
?is_team
?global_restore_formatting
devtools::document()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
