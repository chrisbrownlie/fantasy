get_my_team()
devtools::load_all(".")
devtools:;doc
devtools:docu
devtools::document()
devtools::load_all(".")
get_my_team()
get_my_team() |> team_substitute(255, 166)
devtools::load_all(".")
get_my_team()
get_my_team() |> assign_role(255)
devtools::load_all(".")
get_my_team() |> assign_role(255)
get_my_team() |> assign_role(255, 'vc')
get_my_team() |> assign_role(255, 'vc') |> update_team()
get_my_team() |> assign_role(428, 'vc') |> update_team()
cli::cli_alert("< Transfers in")
cli_alert("Alert for starting a process or computation",
class = "alert-start")
cli::cli_alert("Alert for starting a process or computation",
class = "alert-start")
cli::cli_alert("Alert for starting a process or computation",
class = "alert-end")
cli::code_theme_list()
cli::cli_text("{symbol$arrow_left} Transfers out")
cli::cli_text("{cli::symbol$arrow_left} Transfers out")
cli::cli_alret("{cli::symbol$arrow_left} Transfers out")
cli::cli_alert("{cli::symbol$arrow_left} Transfers out")
cli::cli_text("{cli::symbol$line} No transfers.")
cli::cli_text(paste0("{cli::symbol$circle_filled}", cli::col_cyan("Captaincy:"), "Me -> You"))
cli::cli_text(paste0("{cli::symbol$circle_filled} ", cli::col_cyan("Captaincy:"), "Me -> You"))
cli::cli_text(paste0("{cli::symbol$circle_double} ", cli::col_cyan("Captaincy:"), "Me -> You"))
get_my_team()
cli::cli_text(paste0("{cli::symbol$radio_on} ", cli::col_cyan("Captaincy:"), "Me -> You"))
cli::cli_text(paste0("{cli::symbol$radio_off} ", cli::col_cyan("Captaincy:"), "Me -> You"))
devtools::load_all(".")
get_my_team()
get_my_team() |> assign_role(166)
get_my_team() |> assign_role(370)
get_my_team() |> assign_role(370) |> summarise_team_changes()
get_my_team() |> assign_role(370) |> summarise_team_changes(previous = get_my_team())
get_my_team() |> assign_role(370) |> assign_role(299, "vc") |> summarise_team_changes(previous = get_my_team())
get_my_team() |> assign_role(370) |> assign_role(299, "vc") |> update_team()
cli::cli_alert("Squad changes:")
cli::cli_alert_info("Squad changes:")
devtools::load_all(".")
devtools::load_all(".")
get_my_team() |> assign_role(370) |> assign_role(299, "vc") |> update_team()
get_my_team() |> assign_role(370) |> assign_role(299, "vc") |> update_team()
get_my_team()
devtools::load_all(".")
get_my_team() |> assign_role(370) |> assign_role(299, "vc") |> update_team()
devtools::load_all(".")
get_my_team() |> assign_role(370) |> assign_role(299, "vc") |> update_team()
get_my_team()
get_my_team() |> assign_role(283) |> assign_role(428, "vc") |> update_team()
get_my_team() |> team_substitute(430, 199) |> team_substitute(255, 166) |> team_substitute(465, 391) |> update_team()
get_my_team()
devtools::load_all(".")
get_my_team()
get_my_team() |> team_substitute(430, 199) |> team_substitute(255, 166) |> team_substitute(465, 391) |> update_team()
get_my_team()
cli::get_spinner("dots")
cli::cli_alert(cli::get_spinner("dots"))
cli::cli_text(cli::get_spinner("dots"))
cli::list_spinners()
cli::list_symbols()
cli::ansi_with_hidden_cursor(cli::demo_spinners("dots"))
usethis::use_testthat()
usethis::use_test()
new_team <- new_team_selection(1:15,
1,
2)
library(testthat)
expect_s3_class(new_team, "team_selection")
expect_named(new_team)
expect_named(new_team, "id")
expect_equal(attr(new_team, "submission_order"), 1:15)
get_my_team$id
get_my_team()$id
valid_team <- new_team_selection(players = valid_team_ids,
captain = valid_team_ids[8],
vc = valid_team_ids[9])
valid_team_ids <- c(15, 430, 299, 10, 280, 283, 428, 305, 370, 465, 255, 398, 199, 391, 166)
valid_team <- new_team_selection(players = valid_team_ids,
captain = valid_team_ids[8],
vc = valid_team_ids[9])
valid_team <- new_team_selection(players = valid_team_ids,
captain = valid_team_ids[8],
vc = valid_team_ids[9])
validated_team <- validate_team_selection(valid_team)
valid_team_ids <- c(15, 430, 299, 10, 280, 283, 428, 305, 370, 465, 255, 398, 199, 391, 166)
valid_team <- new_team_selection(players = valid_team_ids,
captain = valid_team_ids[8],
vc = valid_team_ids[9])
validated_team <- validate_team_selection(valid_team)
valid_team_ids <- c(15, 430, 299, 10, 280, 283, 428, 305, 370, 465, 255, 398, 199, 391, 166)
valid_team <- team_selection(players = valid_team_ids,
captain = valid_team_ids[8],
vc = valid_team_ids[9])
valid_team_ids[8]
valid_team_ids[9]
players <- get_players()
keepers <- players$id[players$position == "GKP"][round(runif(1, min = 1, max = length(.)))]
keepers <- players$id[players$position == "GKP"][round(runif(1, min = 1, max = length(players$id[players$position == "GKP"])))]
keepers <- players$id[players$position == "GKP"][round(runif(2, min = 1, max = length(players$id[players$position == "GKP"])))]
keepers
keepers <- players$id[players$position == "GKP"][round(runif(2, min = 1, max = length(players$id[players$position == "GKP"])))]
defs <- players$id[players$position == "DEF"][round(runif(5, min = 1, max = length(players$id[players$position == "DEF"])))]
mids <- players$id[players$position == "MID"][round(runif(5, min = 1, max = length(players$id[players$position == "MID"])))]
fwds <- players$id[players$position == "FWD"][round(runif(3, min = 1, max = length(players$id[players$position == "FWD"])))]
random_team_ids <- c(keepers[1],
defs[1:4],
mids[1:4],
fwds[1:2],
keepers[2],
defs[5],
mids[5],
fwds[3])
valid_team <- team_selection(players = random_team_ids,
captain = random_team_ids[8],
vc = random_team_ids[9])
valid_team
players <- get_players()
expect_error(
team_selection(players = keepers,
captain = keepers[1],
vc = keepers[2])
)
team_selection(players = keepers,
captain = keepers[1],
vc = keepers[2])
keepers
keepers <- players$id[players$position == "GKP"][round(runif(15, min = 1, max = length(players$id[players$position == "GKP"])))]
defs <- players$id[players$position == "DEF"][round(runif(15, min = 1, max = length(players$id[players$position == "DEF"])))]
mids <- players$id[players$position == "MID"][round(runif(15, min = 1, max = length(players$id[players$position == "MID"])))]
fwds <- players$id[players$position == "FWD"][round(runif(15, min = 1, max = length(players$id[players$position == "FWD"])))]
expect_error(
team_selection(players = keepers,
captain = keepers[1],
vc = keepers[2])
)
team_selection(players = keepers,
captain = keepers[1],
vc = keepers[2])
team_selection(players = valid_team_ids[1:14],
captain = valid_team_ids[2],
vc = valid_team_ids[7])
team_selection(players = c(keepers[1],
defs[1:5],
mids[1:5],
keepers[2],
fwds[1:3]),
captain = defs[1],
vc = mids[2])
# Incorrect starting XI positions
expect_error(
team_selection(players = c(keepers[1],
defs[1:5],
mids[1:5],
keepers[2],
fwds[1:3]),
captain = defs[1],
vc = mids[2]),
regexp = "forward in starting XI"
)
# Incorrect starting XI positions
expect_error(
team_selection(players = c(keepers[1],
defs[1:5],
mids[1:5],
keepers[2],
fwds[1:3]),
captain = defs[1],
vc = mids[2]),
regexp = "forward in your starting XI"
)
team_selection(players = valid_team_ids,
captain = keepers[3],
vc = valid_team_ids[7])
# Captain not in team
expect_error(
team_selection(players = valid_team_ids,
captain = keepers[3],
vc = valid_team_ids[7]),
regexp = "captain is not one of the players in the squad"
)
team_selection(players = valid_team_ids,
captain = keepers[1],
vc = defs[15])
team_selection(players = valid_team_ids,
captain = valid_team_ids[1],
vc = defs[15])
# Vice-captain not in team
expect_error(
team_selection(players = valid_team_ids,
captain = valid_team_ids[1],
vc = defs[15]),
regexp = "vice-captain is not one of the players in the squad"
)
# Too many players from one team
arsenal <- players %>% filter(team == 1)
arsenal_team <- c(arsenal$id[arsenal$position == "GKP"])
arsenal_team <- c(arsenal$id[arsenal$position == "GKP"][1],
arsenal$id[arsenal$position == "DEF"][1:4],
arsenal$id[arsenal$position == "MID"][1:4],
arsenal$id[arsenal$position == "FWD"][1:2],
arsenal$id[arsenal$position == "GKP"][2],
arsenal$id[arsenal$position == "DEF"][5],
arsenal$id[arsenal$position == "MID"][5],
arsenal$id[arsenal$position == "FWD"][3])
arsenal_team
arsenal$id[arsenal$position == "FWD"]
arsenal_team <- c(arsenal$id[arsenal$position == "GKP"][1],
arsenal$id[arsenal$position == "DEF"][1:4],
arsenal$id[arsenal$position == "MID"][1:4],
arsenal$id[arsenal$position == "FWD"][1:2],
arsenal$id[arsenal$position == "GKP"][2],
arsenal$id[arsenal$position == "DEF"][5],
arsenal$id[arsenal$position == "MID"][5:6])
arsenal_team
team_selection(players = arsenal_team,
captain = arsenal_team[1],
vc = arsenal_team[11])
# Too many players from one team
arsenal <- players %>% filter(team == 2)
View(arsenal)
team_abbr(2)
# Too many players from one team
villa <- players %>% filter(team == 2)
villa_team <- c(villa$id[villa$position == "GKP"][1],
villa$id[villa$position == "DEF"][1:4],
villa$id[villa$position == "MID"][1:4],
villa$id[villa$position == "FWD"][1:2],
villa$id[villa$position == "GKP"][2],
villa$id[villa$position == "DEF"][5],
villa$id[villa$position == "MID"][5:6])
villa_team
team_selection(players = arsenal_team,
captain = arsenal_team[1],
vc = arsenal_team[11])
team_selection(players = villa_team,
captain = villa_team[1],
vc = villa_team[11])
villa_team <- c(villa$id[villa$position == "GKP"][1],
villa$id[villa$position == "DEF"][1:4],
villa$id[villa$position == "MID"][1:4],
villa$id[villa$position == "FWD"][1:2],
villa$id[villa$position == "GKP"][2],
villa$id[villa$position == "DEF"][5],
villa$id[villa$position == "MID"][5],
villa$id[villa$position == "FWD"][3])
villa_team
team_selection(players = villa_team,
captain = villa_team[1],
vc = villa_team[11])
devtools::load_all(".")
team_selection(players = villa_team,
captain = villa_team[1],
vc = villa_team[11])
devtools::load_all(".")
team_selection(players = villa_team,
captain = villa_team[1],
vc = villa_team[11])
# Too many players from one team
arsenal <- players %>% filter(team == 1)
villa <- players %>% filter(team == 2)
mixed_team <- c(arsenal$id[arsenal$position == "GKP"][1],
villa$id[villa$position == "DEF"][1:4],
arsenal$id[arsenal$position == "MID"][1:4],
villa$id[villa$position == "FWD"][1:2],
arsenal$id[arsenal$position == "GKP"][2],
villa$id[villa$position == "DEF"][5],
arsenal$id[arsenal$position == "MID"][5],
villa$id[villa$position == "FWD"][3])
team_selection(players = mixed_team,
captain = mixed_team[1],
vc = mixed_team[11]),
team_selection(players = mixed_team,
captain = mixed_team[1],
vc = mixed_team[11])
devtools::load_all(".")
devtools::test()
devtools::load_all(".")
devtools::test()
# Need to ensure no more than 3 from any one team
teams <- runif(n = 6, min = 1, max = 20)
# Need to ensure no more than 3 from any one team
teams <- round(runif(n = 6, min = 1, max = 20))
sample(1:20, 6)
# Need to ensure no more than 3 from any one team
teams <- sample(1:20, 6)
# Need to ensure no more than 3 from any one team
teams <- sample(1:20, 7)
keepers <- players$id[players$position == "GKP" & team == teams[1]][1:2]
defs <- players$id[players$position == "DEF" & team == teams[2]][1:3]
defs2 <- players$id[players$position == "DEF" & team == teams[3]][1:2]
mids <- players$id[players$position == "MID" & team == teams[4]][1:3]
mids2 <- players$id[players$position == "MID" & team == teams[5]][1:2]
fwds1 <- players$id[players$position == "FWD" & team == teams[6]][1:2]
fwds2 <- players$id[players$position == "FWD" & team == teams[7]][1]
# Need to ensure no more than 3 from any one team
teams <- sample(1:20, 7)
keepers <- players$id[players$position == "GKP" & players$team == teams[1]][1:2]
defs <- players$id[players$position == "DEF" & players$team == teams[2]][1:3]
defs2 <- players$id[players$position == "DEF" & players$team == teams[3]][1:2]
mids <- players$id[players$position == "MID" & players$team == teams[4]][1:3]
mids2 <- players$id[players$position == "MID" & players$team == teams[5]][1:2]
fwds1 <- players$id[players$position == "FWD" & players$team == teams[6]][1:2]
fwds2 <- players$id[players$position == "FWD" & players$team == teams[7]][1]
random_team_ids <- c(keepers[1],
defs1,
defs2[1],
mids1,
mids2[1],
fwds1,
keepers[2],
defs2[2],
mids2[2],
fwds2)
# Need to ensure no more than 3 from any one team
teams <- sample(1:20, 7)
keepers <- players$id[players$position == "GKP" & players$team == teams[1]][1:2]
defs1 <- players$id[players$position == "DEF" & players$team == teams[2]][1:3]
defs2 <- players$id[players$position == "DEF" & players$team == teams[3]][1:2]
mids1 <- players$id[players$position == "MID" & players$team == teams[4]][1:3]
mids2 <- players$id[players$position == "MID" & players$team == teams[5]][1:2]
fwds1 <- players$id[players$position == "FWD" & players$team == teams[6]][1:2]
fwds2 <- players$id[players$position == "FWD" & players$team == teams[7]][1]
random_team_ids <- c(keepers[1],
defs1,
defs2[1],
mids1,
mids2[1],
fwds1,
keepers[2],
defs2[2],
mids2[2],
fwds2)
random_team_ids
valid_team <- team_selection(players = random_team_ids,
captain = random_team_ids[8],
vc = random_team_ids[9])
valid_team
expect_s3_class(valid_team, "team_selection")
expect_named(valid_team, c("id", "name", "known_as", "position", "team", "points", "points_total", "form", "cost"))
expect_equal(nrow(valid_team), 15)
expect_equal(attr(valid_team, "captain"), random_team_ids[8])
expect_equal(attr(valid_team, "vc"), random_team_ids[9])
expect_equal(attr(valid_team, "submission_order"), random_team_ids)
devtools::load_all(".")
devtools::test()
usethis::use_test()
valid_team <- team_selection(players = valid_team_ids,
captain = valid_team_ids[1],
vc = valid_team_ids[3])
valid_team
valid_team_ids <- c(15, 430, 299, 10, 280, 283, 428, 305, 370, 465, 255, 398, 199, 391, 166)
valid_team <- team_selection(players = valid_team_ids,
captain = valid_team_ids[1],
vc = valid_team_ids[3])
subbed_team <- team_substitute(valid_team,
15,
398)
valid_team <- team_selection(players = valid_team_ids,
captain = valid_team_ids[6],
vc = valid_team_ids[7])
subbed_team <- team_substitute(valid_team,
15,
398)
expect_equal(valid_team, subbed_team)
expect_setequal(valid_team, subbed_team)
expect_setequal(valid_team$id, subbed_team$id)
expect_setequal(attr(valid_team, "submission_order"), attr(subbed_team, "submission_order"))
expect_equal(subbed_team$id[1], 398)
devtools::test()
expect_error(
team_substitute(valid_team,
p1 = valid_team_ids[6],
p2 = valid_team_ids[14])
)
team_substitute(valid_team,
p1 = valid_team_ids[6],
p2 = valid_team_ids[14])
team_substitute(valid_team,
p1 = valid_team_ids[7],
p2 = valid_team_ids[14])
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
devtools::load_all(".")
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12])
expect_error(
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12]),
regexp = "must select 1 goalkeeper in your starting XI"
)
expect_error(
team_substitute(valid_team,
p1 = valid_team_ids[4],
p2 = valid_team_ids[12]),
regexp = "must select.*?goalkeeper in your starting XI"
)
devtools::test()
devtools::load_all(".")
devtools::test()
devtools::load_all(".")
devtools::test()
usethis::use_test()
httr2::secret_make_key()
httr2::secret_encrypt("chris.brownlie@hotmail.co.uk", key = "FANTASY_KEY")
httr2::secret_encrypt("chris.brownlie@hotmail.co.uk", key = "x_WyyjrHGuyQGRR_gXDPIA")
httr2::secret_encrypt("chris.brownlie@hotmail.co.uk", key = "FANTASY_KEY")
httr2::secret_decrypt(sdYfOjkcWdEDA5cAdU5r6VPwt-ji_b-QYpQ-FyMDPioeVKTKQL4Q_m5Xda0, "FANTASY_KEY")
httr2::secret_decrypt("sdYfOjkcWdEDA5cAdU5r6VPwt-ji_b-QYpQ-FyMDPioeVKTKQL4Q_m5Xda0", "FANTASY_KEY")
httr2::secret_decrypt("tPIPG8HBhvYfTY2j5dEEDfGdc2VcvclMi-TANtfDclBLYGiNYu4198rneTk", "FANTASY_KEY")
httr2::secret_encrypt("rr3Rct&Ryq&!", key = "FANTASY_KEY")
out <- authenticate(email = httr2::secret_decrypt("tPIPG8HBhvYfTY2j5dEEDfGdc2VcvclMi-TANtfDclBLYGiNYu4198rneTk",
"FANTASY_KEY"),
password = httr2::secret_decrypt("-SJx4AhW09y51joLmPSEWWAf5ezKkVX0EluSeQ",
"FANTASY_KEY"))
?expect_snapshote
?expect_snapshot
expect_snapshot(
authenticate(email = httr2::secret_decrypt("tPIPG8HBhvYfTY2j5dEEDfGdc2VcvclMi-TANtfDclBLYGiNYu4198rneTk",
"FANTASY_KEY"),
password = httr2::secret_decrypt("-SJx4AhW09y51joLmPSEWWAf5ezKkVX0EluSeQ",
"FANTASY_KEY")),
transform = function(x) gsub(pattern = "[[:alnum:][:punct:]]+@[[:alnum:][:punct:]]",
replacement = "[login]",
x)
)
expect_snapshot(
authenticate(email = httr2::secret_decrypt("tPIPG8HBhvYfTY2j5dEEDfGdc2VcvclMi-TANtfDclBLYGiNYu4198rneTk",
"FANTASY_KEY"),
password = httr2::secret_decrypt("-SJx4AhW09y51joLmPSEWWAf5ezKkVX0EluSeQ",
"FANTASY_KEY")),
transform = function(x) gsub(pattern = "[[:alnum:][:punct:]]+@[[:alnum:][:punct:]]+",
replacement = "[login]",
x)
)
devtools::test()
devtools::test()
usethis::use_test()
fixtures <- query_fixtures_data()
names(fixtures)
length(fixtures)
fixtures <- get_fixture_list()
class(fixtures)
expect_named(fixtures, c("id",
"gameweek",
"finished",
"kickoff_time",
"minutes",
"home_team",
"home_score",
"home_difficulty",
"away_team",
"away_score",
"away_difficulty"))
fixture_stats <- get_fixture_stats()
expect_named(fixture_stats, c("fixture_id", "stat", "team", "player", "value"))
expect_s3_class(fixtures, "tbl_df")
expect_s3_class(fixture_stats, "tbl_df")
usethis::use_test()
general <- query_general_data()
expect_length(general, 8)
expect_class(general, "list")
class(general)
expect_s3_class(general, "list")
expect_type(general, "list")
names(general)
test_that("boostrap-static can be queried", {
general <- query_general_data()
expect_length(general, 8)
expect_type(general, "list")
expect_named(general, c("events", "game_settings", "phases", "teams", "total_players", "elements", "element_stats", "element_types"))
})
usethis::use_test()
lineups <- get_predicted_lineups()
expect_s3_class(lineups, "tbl_df")
count(lineups, team)$n
count(lineups, Team)$n
rep(11, 20)
devtools::load_all(".")
lineups <- get_predicted_lineups()
lineups
get_my_team()
usethis::use_test()
players <- get_players()
names(players)
expect_named(players)
expect_equal(length(players), 580)
