selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD"))) %>%
select(selection_pos, bench, id, name, position, points_total) %>%
arrange(bench, position)
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD"))) %>%
select(selection_pos, bench, id, name, position, points_total) %>%
arrange(bench, position, points_total)
selection
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD"))) %>%
select(selection_pos, bench, id, name, position, points_total) %>%
arrange(bench, position, desc(points_total))
selection
# Print team info to console
cli::cli_rule("Your team selection")
# Print team info to console
cli::cli_alert_info("Your selected team:")
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD"))) %>%
select(selection_pos, bench, id, known_as, position, points_total) %>%
arrange(bench, position, desc(points_total))
selection
cli::cli_alert(paste0("GKP: ", selection$known_as[1]))
cli::cli_alert(paste0("GKP: ", cli::cyan(selection$known_as[1])))
cli::cli_alert(paste0("GKP: ", cli::col_cyan(selection$known_as[1])))
cli::cli_alert(paste0("DEF: ", cli::col_cyan(selection$known_as[!selection$bench&selection$position=="DEF"])))
# Print team info to console
starting_defs <- paste(selection$known_as[!selection$bench&selection$position=="DEF"], collapse = "; ")
# Print team info to console
starting_defs <- paste(selection$known_as[!selection$bench&selection$position=="DEF"], collapse = "; ")
starting_mids <- paste(selection$known_as[!selection$bench&selection$position=="MID"], collapse = "; ")
starting_fwds <- paste(selection$known_as[!selection$bench&selection$position=="FWD"], collapse = "; ")
benched <- paste(selection$known_as[selection$bench], collapse = "; ")
cli::cli_alert_info("Your selected team:")
cli::cli_alert(paste0("GKP: ", cli::col_cyan(selection$known_as[1])))
cli::cli_alert(paste0("DEF: ", cli::col_cyan(starting_defs)))
cli::cli_alert(paste0("MID: ", cli::col_cyan(starting_mids)))
# Print team info to console
starting_defs <- paste(cli::col_cyan(selection$known_as[!selection$bench&selection$position=="DEF"]), collapse = "; ")
starting_defs
cli::cli_alert(paste0("DEF: ", starting_defs))
# Print team info to console
starting_defs <- paste(cli::col_cyan(selection$known_as[!selection$bench&selection$position=="DEF"]), collapse = "; ")
starting_mids <- paste(cli::col_cyan(selection$known_as[!selection$bench&selection$position=="MID"]), collapse = "; ")
starting_fwds <- paste(cli::col_cyan(selection$known_as[!selection$bench&selection$position=="FWD"]), collapse = "; ")
benched <- paste(cli::col_cyan(selection$known_as[selection$bench]), collapse = "; ")
cli::cli_alert_info("Your selected team:")
cli::cli_alert(paste0("GKP: ", cli::col_cyan(selection$known_as[1])))
cli::cli_alert(paste0("DEF: ", starting_defs))
cli::cli_alert(paste0("MID: ", starting_mids))
cli::cli_alert(paste0("FWD: ", starting_fwds))
cli::cli_alert(paste0("(Bench): ", benched))
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
captain = selection_pos == cpt_pos,
vc = selection_pos == vc_pos,
sel_string = paste0(cli::col_cyan(known_as),
" (",
cli::col_yellow(points_total), "points)",
ifelse(captain,
"(C)",
ifelse(vc,
"(VC)",
"")))) %>%
select(selection_pos, bench, id, known_as, position, points_total, captain, vc) %>%
arrange(bench, position, desc(points_total))
cpt_pos <- 7
vc_pos <- 8
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
captain = selection_pos == cpt_pos,
vc = selection_pos == vc_pos,
sel_string = paste0(cli::col_cyan(known_as),
" (",
cli::col_yellow(points_total), "points)",
ifelse(captain,
"(C)",
ifelse(vc,
"(VC)",
"")))) %>%
select(selection_pos, bench, id, known_as, position, points_total, captain, vc) %>%
arrange(bench, position, desc(points_total))
selection
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
captain = selection_pos == cpt_pos,
vc = selection_pos == vc_pos,
sel_string = paste0(cli::col_cyan(known_as),
" (",
cli::col_yellow(points_total), "points)",
ifelse(captain,
"(C)",
ifelse(vc,
"(VC)",
"")))) %>%
arrange(bench, position, desc(points_total))
selection
# Print team info to console
starting_defs <- paste(selection$sel_string[!selection$bench&selection$position=="DEF"], collapse = "; ")
starting_mids <- paste(selection$sel_string[!selection$bench&selection$position=="MID"], collapse = "; ")
starting_fwds <- paste(selection$sel_string[!selection$bench&selection$position=="FWD"], collapse = "; ")
benched <- paste(selection$sel_string[selection$bench], collapse = "; ")
cli::cli_alert_info("Your selected team:")
cli::cli_alert(paste0("GKP: ", cli::col_cyan(selection$sel_string[1])))
cli::cli_alert(paste0("DEF: ", starting_defs))
cli::cli_alert(paste0("MID: ", starting_mids))
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
captain = selection_pos == cpt_pos,
vc = selection_pos == vc_pos,
sel_string = paste0(cli::col_cyan(known_as),
" (",
cli::col_yellow(points_total), ")",
ifelse(captain,
"(C)",
ifelse(vc,
"(VC)",
"")))) %>%
arrange(bench, position, desc(points_total))
# Print team info to console
starting_defs <- paste(selection$sel_string[!selection$bench&selection$position=="DEF"], collapse = "; ")
starting_mids <- paste(selection$sel_string[!selection$bench&selection$position=="MID"], collapse = "; ")
starting_fwds <- paste(selection$sel_string[!selection$bench&selection$position=="FWD"], collapse = "; ")
benched <- paste(selection$sel_string[selection$bench], collapse = "; ")
cli::cli_alert_info("Your selected team:")
cli::cli_alert(paste0("GKP: ", cli::col_cyan(selection$sel_string[1])))
cli::cli_alert(paste0("DEF: ", starting_defs))
cli::cli_alert(paste0("MID: ", starting_mids))
cli::cli_alert(paste0("FWD: ", starting_fwds))
cli::cli_alert(paste0("(Bench): ", benched))
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
captain = selection_pos == cpt_pos,
vc = selection_pos == vc_pos,
sel_string = paste0(cli::col_cyan(known_as),
"-",
cli::col_yellow(points_total),
ifelse(captain,
cli::style_bold(" (C)"),
ifelse(vc,
cli::style_bold(" (VC)"),
"")))) %>%
arrange(bench, position, desc(points_total))
# Print team info to console
starting_defs <- paste(selection$sel_string[!selection$bench&selection$position=="DEF"], collapse = "; ")
starting_mids <- paste(selection$sel_string[!selection$bench&selection$position=="MID"], collapse = "; ")
starting_fwds <- paste(selection$sel_string[!selection$bench&selection$position=="FWD"], collapse = "; ")
benched <- paste(selection$sel_string[selection$bench], collapse = "; ")
cli::cli_alert_info("Your selected team:")
cli::cli_alert(paste0("GKP: ", cli::col_cyan(selection$sel_string[1])))
cli::cli_alert(paste0("DEF: ", starting_defs))
cli::cli_alert(paste0("MID: ", starting_mids))
cli::cli_alert(paste0("FWD: ", starting_fwds))
# Print team info to console
starting_defs <- paste(selection$sel_string[!selection$bench&selection$position=="DEF"], collapse = ";  ")
starting_mids <- paste(selection$sel_string[!selection$bench&selection$position=="MID"], collapse = ";  ")
starting_fwds <- paste(selection$sel_string[!selection$bench&selection$position=="FWD"], collapse = ";  ")
benched <- paste(selection$sel_string[selection$bench], collapse = "; ")
cli::cli_alert_info("Your selected team:")
cli::cli_alert(paste0("GKP: ", cli::col_cyan(selection$sel_string[1])))
cli::cli_alert(paste0("DEF: ", starting_defs))
cli::cli_alert(paste0("MID: ", starting_mids))
devtools::load_all(".")
player_ids
update_team(player_ids, 7, 8)
cli::cli_bullets(paste0("GKP: ", cli::col_cyan(selection$sel_string[1])))
rm(list=ls())
devtools::load_all(".")
get_my_team()
player_ids <- get_my_team()$id
devtools::load_all(".")
update_team(player_ids, 6, 7)
get_my_team()
selection_df <- get_my_team()
selection <- selection_df %>%
rename(any_of(c(selection_pos = team_position))) %>%
mutate(bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
sel_string = paste0(cli::col_cyan(known_as),
"-",
cli::col_yellow(points_total),
ifelse(is_captain,
cli::style_bold(" (C)"),
ifelse(is_vice_captain,
cli::style_bold(" (VC)"),
"")))) %>%
arrange(bench, position, desc(points_total))
selection <- selection_df %>%
rename(any_of(c("selection_pos" = "team_position"))) %>%
mutate(bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
sel_string = paste0(cli::col_cyan(known_as),
"-",
cli::col_yellow(points_total),
ifelse(is_captain,
cli::style_bold(" (C)"),
ifelse(is_vice_captain,
cli::style_bold(" (VC)"),
"")))) %>%
arrange(bench, position, desc(points_total))
devtools::load_all(".")
selection_df <- get_my_team()
selection <- selection_df %>%
rename(any_of(c("selection_pos" = "team_position"))) %>%
mutate(bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
sel_string = paste0(cli::col_cyan(known_as),
"-",
cli::col_yellow(points_total),
ifelse(is_captain,
cli::style_bold(" (C)"),
ifelse(is_vice_captain,
cli::style_bold(" (VC)"),
"")))) %>%
arrange(bench, position, desc(points_total))
devtools::load_all(".")
selection_df <- get_my_team()
selection <- selection_df %>%
rename(any_of(c("selection_pos" = "team_position"))) %>%
mutate(bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
sel_string = paste0(cli::col_cyan(known_as),
"-",
cli::col_yellow(points_total),
ifelse(is_captain,
cli::style_bold(" (C)"),
ifelse(is_vice_captain,
cli::style_bold(" (VC)"),
"")))) %>%
arrange(bench, position, desc(points_total))
# Print team info to console
starting_defs <- paste(selection$sel_string[!selection$bench&selection$position=="DEF"], collapse = ";  ")
starting_mids <- paste(selection$sel_string[!selection$bench&selection$position=="MID"], collapse = ";  ")
starting_fwds <- paste(selection$sel_string[!selection$bench&selection$position=="FWD"], collapse = ";  ")
benched <- paste(selection$sel_string[selection$bench], collapse = "; ")
cli::cli_alert_info("Your selected team:")
cli::cli_bullets(paste0("GKP: ", cli::col_cyan(selection$sel_string[1])))
cli::cli_bullets(paste0("DEF: ", starting_defs))
cli::cli_bullets(paste0("MID: ", starting_mids))
cli::cli_bullets(paste0("FWD: ", starting_fwds))
cli::cli_bullets(paste0("(Bench): ", benched))
player_ids
new_player_ids <- player_ids
new_player_ids[10] <- player_ids[15]
new_player_ids[15] <- player_ids[10]
old_player_ids <- player_ids
player_ids <- new_player_ids
cpt_pos <- 1
vc_pos <- 3
selection <- get_players() %>%
filter(id %in% player_ids) %>%
mutate(selection_pos = match(id, player_ids),
bench = !selection_pos %in% 1:11,
position = ordered(position, levels = c("GKP", "DEF", "MID", "FWD")),
is_captain = selection_pos == cpt_pos,
is_vice_captain = selection_pos == vc_pos) %>%
arrange(bench, position, desc(points_total))
# Print team info to console
print_team_selection(selection)
devtools::load_all(".")
# Print team info to console
print_team_selection(selection)
get_my_team() |> print_team_selection()
devtools::load_all(".")
get_my_team()
get_my_team() |> print_team_selection()
cli::cli_abort("{.arg type}")
cli::cli_abort("{.arg type} must be one of 'json', 'html' or 'string'")
devtools::load_all(".")
# Get the page
content <- perform_query("https://www.fantasyfootballscout.co.uk/team-news/",
type = "dfrd")
# Get the page
content <- perform_query("https://www.fantasyfootballscout.co.uk/team-news/",
type = "html")
content
install.packages("rvest")
# Get the page
content <- perform_query("https://www.fantasyfootballscout.co.uk/team-news/",
type = "html") |>
rvest::html_elements(css = ".formation")
# Get the page
content <- perform_query("https://www.fantasyfootballscout.co.uk/team-news/",
type = "html") |>
rvest::html_elements(css = ".formation") |>
rvest::html_table()
# Get the page
content <- perform_query("https://www.fantasyfootballscout.co.uk/team-news/",
type = "html") |>
rvest::html_elements(css = ".formation") |>
rvest::html_text2()
content
lineups <- content |>
rvest::html_elements(css = ".formation") |>
rvest::html_text2() |>
gsub("\n", ", ")
# Get the page
content <- perform_query("https://www.fantasyfootballscout.co.uk/team-news/",
type = "html")
lineups <- content |>
rvest::html_elements(css = ".formation") |>
rvest::html_text2() |>
gsub("\n", ", ")
lineups <- content |>
rvest::html_elements(css = ".formation") |>
rvest::html_text2() |>
gsub(pattern = "\n", replacement = "; ")
lineups
teams <- content |>
rvest::html_elements(css = "story-wrap")
teams <- content |>
rvest::html_elements(css = ".story-wrap")
teams <- content |>
rvest::html_elements(css = ".story-wrap") |>
rvest::html_element("h2")
teams <- content |>
rvest::html_elements(css = ".story-wrap") |>
rvest::html_element("h2") |>
rvest::html_text2()
lineups <- content |>
rvest::html_elements(css = ".formation") |>
rvest::html_text2() |>
strsplit(pattern = "\n")
lineups <- content |>
rvest::html_elements(css = ".formation") |>
rvest::html_text2() |>
strsplit("\n")
lineups
rm(lineups)
# Extract raw player lineups
players <- content |>
rvest::html_elements(css = ".formation") |>
rvest::html_text2() |>
strsplit("\n")
# Get corresponding team names
teams <- content |>
rvest::html_elements(css = ".story-wrap") |>
rvest::html_element("h2") |>
rvest::html_text2()
names(players) <- teams
# Convert to tibble
lineups %>%
tibble::as_tibble()
# Convert to tibble
lineups %>%
bind_rows()
# Convert to tibble
lineups <- players %>%
bind_rows()
# Convert to tibble
lineups <- players %>%
bind_rows() %>%
t()
# Convert to tibble
lineups <- players %>%
bind_rows() %>%
tidyr::pivot_wider()
lineups <- players %>%
bind_rows()
View(lineups)
# Convert to tibble
lineups <- players %>%
bind_rows() %>%
tidyr::pivot_longer(names_to = "Team", values_to = "Player")
# Convert to tibble
lineups <- players %>%
bind_rows() %>%
tidyr::pivot_longer(everything(), names_to = "Team", values_to = "Player")
View(lineups)
lineups <- players %>%
bind_rows()
View(lineups)
?pivot_longer
# Convert to tibble
lineups <- players %>%
bind_rows() %>%
mutate(across(everything(), ~paste0(.x, row_number(.))))
View(lineups)
# Convert to tibble
lineups <- players %>%
bind_rows() %>%
mutate(across(everything(), ~paste0(.x, row_number())))
# Convert to tibble
lineups <- players %>%
bind_rows() %>%
mutate(across(everything(), ~paste0(row_number(), .x)))
# Convert to tibble
lineups <- players |>
bind_rows() |>
mutate(across(everything(), ~paste0(row_number(), .x))) |>
tidyr::pivot_longer(everything(),
names_to = c("Position", "Team"),
values_to = "Player",
names_pattern = "(\\d)(.*)")
# Convert to tibble
lineups <- players |>
bind_rows() |>
mutate(across(everything(), ~paste0(row_number(), .x))) |>
tidyr::pivot_longer(everything(),
names_to = c("Position", "Team"),
values_to = "Player",
names_pattern = "([[:digit:]])(.*?)")
# Convert to tibble
lineups <- players |>
bind_rows() |>
mutate(across(everything(), ~paste0(row_number(), .x))) |>
tidyr::pivot_longer(everything(),
names_to = "Team",
values_to = "Player")
# Convert to tibble
lineups <- players |>
bind_rows() |>
mutate(across(everything(), ~paste0(row_number(), .x))) |>
tidyr::pivot_longer(everything(),
names_to = "Team",
values_to = "Player") %>%
mutate(Selection = gsub(pattern = "^(\\d).*", replacement = "\\1"),
Player = gsub(pattern = "^\\d(.*)", replacement = "\\1"))
# Convert to tibble
lineups <- players |>
bind_rows() |>
mutate(across(everything(), ~paste0(row_number(), .x))) |>
tidyr::pivot_longer(everything(),
names_to = "Team",
values_to = "Player") %>%
mutate(Selection = gsub(pattern = "^(\\d).*",
replacement = "\\1",
Player),
Player = gsub(pattern = "^\\d(.*)",
replacement = "\\1",
Player)) |>
select(Team, Selection, Player)
# Convert to tibble
lineups <- players |>
bind_rows() |>
mutate(across(everything(), ~paste0(row_number(), .x))) |>
tidyr::pivot_longer(everything(),
names_to = "Team",
values_to = "Player") %>%
mutate(Selection = gsub(pattern = "^(\\d+).*",
replacement = "\\1",
Player),
Player = gsub(pattern = "^\\d+(.*)",
replacement = "\\1",
Player)) |>
select(Team, Selection, Player)
devtools::load_all(".")
get_my_team()
devtools::load_all(".")
get_my_team()
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
httr2::with_verbosity(get_my_team(), 3)
devtools::load_all(".")
update_team(player_ids = get_my_team()$id, captain_position_id = 6, 7)
update_team(player_ids = get_my_team()$id, captain_position_id = 6, 7)
devtools::load_all(".")
update_team(player_ids = get_my_team()$id, captain_position_id = 6, 7)
reticulate::repl_python()
